Classfile /E:/RaybanLeeeee/note/programming/java/jvm/ArrayList.class
  Last modified 2017-12-19; size 11234 bytes
  MD5 checksum 8310b5adc9417b167c2ed96568be2464
  Compiled from "ArrayList.java"
public class java.util.ArrayList<E extends java.lang.Object> extends java.util.AbstractList<E> implements java.util.List<E>, java.util.RandomAccess, java.lang.Cloneable, java.io.Serializable
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
    #1 = Integer            2147483639
    #2 = Integer            2147483647
    #3 = String             #33           // )
    #4 = String             #34           // ) > toIndex(
    #5 = String             #35           // , Size:
    #6 = String             #45           // Illegal Capacity:
    #7 = String             #46           // Index:
    #8 = String             #78           // fromIndex =
    #9 = String             #79           // fromIndex(
   #10 = String             #148          // toIndex =
   #11 = Class              #54           // "[Ljava/lang/Object;"
   #12 = Utf8               ()I
   #13 = Utf8               ()Ljava/lang/Object;
   #14 = Utf8               ()Ljava/lang/String;
   #15 = Utf8               ()V
   #16 = Utf8               ()Z
   #17 = Utf8               (I)I
   #18 = Utf8               (I)Ljava/lang/String;
   #19 = Utf8               (I)TE;
   #20 = Utf8               (I)V
   #21 = Utf8               (II)I
   #22 = Utf8               (II)V
   #23 = Utf8               (III)V
   #24 = Utf8               (ITE;)TE;
   #25 = Utf8               (ITE;)V
   #26 = Utf8               (Ljava/io/ObjectInputStream;)V
   #27 = Utf8               (Ljava/io/ObjectOutputStream;)V
   #28 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #29 = Utf8               (Ljava/lang/Object;)Z
   #30 = Utf8               (Ljava/lang/String;)V
   #31 = Utf8               (Ljava/lang/Throwable;)V
   #32 = Utf8               (TE;)Z
   #33 = Utf8               )
   #34 = Utf8               ) > toIndex(
   #35 = Utf8               , Size:
   #36 = Utf8               <clinit>
   #37 = Utf8               <init>
   #38 = Utf8               Code
   #39 = Utf8               ConstantValue
   #40 = Utf8               DEFAULTCAPACITY_EMPTY_ELEMENTDATA
   #41 = Utf8               DEFAULT_CAPACITY
   #42 = Utf8               EMPTY_ELEMENTDATA
   #43 = Utf8               Exceptions
   #44 = Utf8               I
   #45 = Utf8               Illegal Capacity:
   #46 = Utf8               Index:
   #47 = Utf8               InnerClasses
   #48 = Utf8               J
   #49 = Utf8               LineNumberTable
   #50 = Utf8               MAX_ARRAY_SIZE
   #51 = Utf8               Signature
   #52 = Utf8               SourceFile
   #53 = Utf8               StackMapTable
   #54 = Utf8               [Ljava/lang/Object;
   #55 = Utf8               accept
   #56 = Utf8               access$000
   #57 = Utf8               add
   #58 = Utf8               addAll
   #59 = Utf8               append
   #60 = Utf8               apply
   #61 = Utf8               arraycopy
   #62 = Utf8               batchRemove
   #63 = Utf8               calculateCapacity
   #64 = Utf8               checkArray
   #65 = Utf8               clear
   #66 = Utf8               clone
   #67 = Utf8               contains
   #68 = Utf8               copyOf
   #69 = Utf8               defaultReadObject
   #70 = Utf8               defaultWriteObject
   #71 = Utf8               elementData
   #72 = Utf8               ensureCapacity
   #73 = Utf8               ensureCapacityInternal
   #74 = Utf8               ensureExplicitCapacity
   #75 = Utf8               equals
   #76 = Utf8               fastRemove
   #77 = Utf8               forEach
   #78 = Utf8               fromIndex =
   #79 = Utf8               fromIndex(
   #80 = Utf8               get
   #81 = Utf8               getClass
   #82 = Utf8               getJavaOISAccess
   #83 = Utf8               grow
   #84 = Utf8               hugeCapacity
   #85 = Utf8               indexOf
   #86 = Utf8               isEmpty
   #87 = Utf8               iterator
   #88 = Utf8               java/io/IOException
   #89 = Utf8               java/io/ObjectInputStream
   #90 = Utf8               java/io/ObjectOutputStream
   #91 = Utf8               java/io/Serializable
   #92 = Utf8               java/lang/ClassNotFoundException
   #93 = Utf8               java/lang/CloneNotSupportedException
   #94 = Utf8               java/lang/Cloneable
   #95 = Utf8               java/lang/IllegalArgumentException
   #96 = Utf8               java/lang/IndexOutOfBoundsException
   #97 = Utf8               java/lang/InternalError
   #98 = Utf8               java/lang/Math
   #99 = Utf8               java/lang/Object
  #100 = Utf8               java/lang/OutOfMemoryError
  #101 = Utf8               java/lang/StringBuilder
  #102 = Utf8               java/lang/System
  #103 = Utf8               java/lang/Throwable
  #104 = Utf8               java/util/AbstractList
  #105 = Utf8               java/util/ArrayList
  #106 = Utf8               java/util/ArrayList$ArrayListSpliterator
  #107 = Utf8               java/util/ArrayList$Itr
  #108 = Utf8               java/util/ArrayList$ListItr
  #109 = Utf8               java/util/ArrayList$SubList
  #110 = Utf8               java/util/Arrays
  #111 = Utf8               java/util/BitSet
  #112 = Utf8               java/util/Collection
  #113 = Utf8               java/util/ConcurrentModificationException
  #114 = Utf8               java/util/List
  #115 = Utf8               java/util/Objects
  #116 = Utf8               java/util/RandomAccess
  #117 = Utf8               java/util/function/Consumer
  #118 = Utf8               java/util/function/Predicate
  #119 = Utf8               java/util/function/UnaryOperator
  #120 = Utf8               lastIndexOf
  #121 = Utf8               listIterator
  #122 = Utf8               max
  #123 = Utf8               modCount
  #124 = Utf8               nextClearBit
  #125 = Utf8               outOfBoundsMsg
  #126 = Utf8               rangeCheck
  #127 = Utf8               rangeCheckForAdd
  #128 = Utf8               readInt
  #129 = Utf8               readObject
  #130 = Utf8               remove
  #131 = Utf8               removeAll
  #132 = Utf8               removeIf
  #133 = Utf8               removeRange
  #134 = Utf8               replaceAll
  #135 = Utf8               requireNonNull
  #136 = Utf8               retainAll
  #137 = Utf8               serialVersionUID
  #138 = Utf8               set
  #139 = Utf8               size
  #140 = Utf8               sort
  #141 = Utf8               spliterator
  #142 = Utf8               subList
  #143 = Utf8               subListRangeCheck
  #144 = Utf8               sun/misc/JavaOISAccess
  #145 = Utf8               sun/misc/SharedSecrets
  #146 = Utf8               test
  #147 = Utf8               toArray
  #148 = Utf8               toIndex =
  #149 = Utf8               toString
  #150 = Utf8               trimToSize
  #151 = Utf8               writeInt
  #152 = Utf8               writeObject
  #153 = Integer            10
  #154 = Long               8683452581122892189l
  #156 = Class              #88           // java/io/IOException
  #157 = Class              #89           // java/io/ObjectInputStream
  #158 = Class              #90           // java/io/ObjectOutputStream
  #159 = Class              #91           // java/io/Serializable
  #160 = Class              #92           // java/lang/ClassNotFoundException
  #161 = Class              #93           // java/lang/CloneNotSupportedException
  #162 = Class              #94           // java/lang/Cloneable
  #163 = Class              #95           // java/lang/IllegalArgumentException
  #164 = Class              #96           // java/lang/IndexOutOfBoundsException
  #165 = Class              #97           // java/lang/InternalError
  #166 = Class              #98           // java/lang/Math
  #167 = Class              #99           // java/lang/Object
  #168 = Class              #100          // java/lang/OutOfMemoryError
  #169 = Class              #101          // java/lang/StringBuilder
  #170 = Class              #102          // java/lang/System
  #171 = Class              #103          // java/lang/Throwable
  #172 = Class              #104          // java/util/AbstractList
  #173 = Class              #105          // java/util/ArrayList
  #174 = Class              #106          // java/util/ArrayList$ArrayListSpliterator
  #175 = Class              #107          // java/util/ArrayList$Itr
  #176 = Class              #108          // java/util/ArrayList$ListItr
  #177 = Class              #109          // java/util/ArrayList$SubList
  #178 = Class              #110          // java/util/Arrays
  #179 = Class              #111          // java/util/BitSet
  #180 = Class              #112          // java/util/Collection
  #181 = Class              #113          // java/util/ConcurrentModificationException
  #182 = Class              #114          // java/util/List
  #183 = Class              #115          // java/util/Objects
  #184 = Class              #116          // java/util/RandomAccess
  #185 = Class              #117          // java/util/function/Consumer
  #186 = Class              #118          // java/util/function/Predicate
  #187 = Class              #119          // java/util/function/UnaryOperator
  #188 = Class              #144          // sun/misc/JavaOISAccess
  #189 = Class              #145          // sun/misc/SharedSecrets
  #190 = Utf8               <T:Ljava/lang/Object;>([TT;)[TT;
  #191 = Utf8               <E:Ljava/lang/Object;>Ljava/util/AbstractList<TE;>;Ljava/util/List<TE;>;Ljava/util/RandomAccess;Ljava/lang/Cloneable;Ljava/io/Serializable;
  #192 = Utf8               ()Ljava/lang/Class;
  #193 = Utf8               ()[Ljava/lang/Object;
  #194 = Utf8               (I)Ljava/lang/Object;
  #195 = Utf8               (ILjava/lang/Object;)V
  #196 = Utf8               (Ljava/lang/Object;)I
  #197 = Utf8               (Ljava/lang/Object;)V
  #198 = Utf8               ([Ljava/lang/Object;I)I
  #199 = Utf8               (I)Ljava/lang/StringBuilder;
  #200 = Utf8               (Ljava/util/ArrayList;)I
  #201 = Utf8               (Ljava/util/ArrayList;)V
  #202 = Utf8               (Ljava/util/ArrayList;I)V
  #203 = Utf8               (Ljava/util/ArrayList;III)V
  #204 = Utf8               (ILjava/util/Collection;)Z
  #205 = Utf8               (ILjava/util/Collection<+TE;>;)Z
  #206 = Utf8               (Ljava/util/Collection;)V
  #207 = Utf8               (Ljava/util/Collection;)Z
  #208 = Utf8               (Ljava/util/Collection;Z)Z
  #209 = Utf8               (Ljava/util/Collection<*>;)Z
  #210 = Utf8               (Ljava/util/Collection<*>;Z)Z
  #211 = Utf8               (Ljava/util/Collection<+TE;>;)V
  #212 = Utf8               (Ljava/util/Collection<+TE;>;)Z
  #213 = Utf8               (Ljava/util/Comparator;)V
  #214 = Utf8               (Ljava/util/Comparator<-TE;>;)V
  #215 = Utf8               ()Ljava/util/Iterator;
  #216 = Utf8               ()Ljava/util/Iterator<TE;>;
  #217 = Utf8               (II)Ljava/util/List;
  #218 = Utf8               (II)Ljava/util/List<TE;>;
  #219 = Utf8               ()Ljava/util/ListIterator;
  #220 = Utf8               ()Ljava/util/ListIterator<TE;>;
  #221 = Utf8               (I)Ljava/util/ListIterator;
  #222 = Utf8               (I)Ljava/util/ListIterator<TE;>;
  #223 = Utf8               ()Ljava/util/Spliterator;
  #224 = Utf8               ()Ljava/util/Spliterator<TE;>;
  #225 = Utf8               (Ljava/util/function/Consumer;)V
  #226 = Utf8               (Ljava/util/function/Consumer<-TE;>;)V
  #227 = Utf8               (Ljava/util/function/Predicate;)Z
  #228 = Utf8               (Ljava/util/function/Predicate<-TE;>;)Z
  #229 = Utf8               (Ljava/util/function/UnaryOperator;)V
  #230 = Utf8               (Ljava/util/function/UnaryOperator<TE;>;)V
  #231 = Utf8               ()Lsun/misc/JavaOISAccess;
  #232 = Utf8               (Ljava/io/ObjectInputStream;Ljava/lang/Class;I)V
  #233 = Utf8               (ILjava/lang/Object;)Ljava/lang/Object;
  #234 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V
  #235 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;
  #236 = Utf8               ([Ljava/lang/Object;I)[Ljava/lang/Object;
  #237 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #238 = Utf8               (Ljava/util/ArrayList;Ljava/util/AbstractList;III)V
  #239 = Utf8               ([Ljava/lang/Object;IILjava/util/Comparator;)V
  #240 = Utf8               ([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;
  #241 = NameAndType        #123:#44      // modCount:I
  #242 = NameAndType        #139:#44      // size:I
  #243 = NameAndType        #40:#54       // DEFAULTCAPACITY_EMPTY_ELEMENTDATA:[Ljava/lang/Object;
  #244 = NameAndType        #42:#54       // EMPTY_ELEMENTDATA:[Ljava/lang/Object;
  #245 = NameAndType        #71:#54       // elementData:[Ljava/lang/Object;
  #246 = NameAndType        #128:#12      // readInt:()I
  #247 = NameAndType        #37:#15       // "<init>":()V
  #248 = NameAndType        #69:#15       // defaultReadObject:()V
  #249 = NameAndType        #70:#15       // defaultWriteObject:()V
  #250 = NameAndType        #84:#17       // hugeCapacity:(I)I
  #251 = NameAndType        #124:#17      // nextClearBit:(I)I
  #252 = NameAndType        #37:#20       // "<init>":(I)V
  #253 = NameAndType        #73:#20       // ensureCapacityInternal:(I)V
  #254 = NameAndType        #74:#20       // ensureExplicitCapacity:(I)V
  #255 = NameAndType        #76:#20       // fastRemove:(I)V
  #256 = NameAndType        #83:#20       // grow:(I)V
  #257 = NameAndType        #126:#20      // rangeCheck:(I)V
  #258 = NameAndType        #127:#20      // rangeCheckForAdd:(I)V
  #259 = NameAndType        #138:#20      // set:(I)V
  #260 = NameAndType        #151:#20      // writeInt:(I)V
  #261 = NameAndType        #122:#21      // max:(II)I
  #262 = NameAndType        #143:#23      // subListRangeCheck:(III)V
  #263 = NameAndType        #81:#192      // getClass:()Ljava/lang/Class;
  #264 = NameAndType        #66:#13       // clone:()Ljava/lang/Object;
  #265 = NameAndType        #129:#13      // readObject:()Ljava/lang/Object;
  #266 = NameAndType        #147:#193     // toArray:()[Ljava/lang/Object;
  #267 = NameAndType        #71:#194      // elementData:(I)Ljava/lang/Object;
  #268 = NameAndType        #85:#196      // indexOf:(Ljava/lang/Object;)I
  #269 = NameAndType        #55:#197      // accept:(Ljava/lang/Object;)V
  #270 = NameAndType        #152:#197     // writeObject:(Ljava/lang/Object;)V
  #271 = NameAndType        #67:#29       // contains:(Ljava/lang/Object;)Z
  #272 = NameAndType        #75:#29       // equals:(Ljava/lang/Object;)Z
  #273 = NameAndType        #146:#29      // test:(Ljava/lang/Object;)Z
  #274 = NameAndType        #63:#198      // calculateCapacity:([Ljava/lang/Object;I)I
  #275 = NameAndType        #149:#14      // toString:()Ljava/lang/String;
  #276 = NameAndType        #125:#18      // outOfBoundsMsg:(I)Ljava/lang/String;
  #277 = NameAndType        #37:#30       // "<init>":(Ljava/lang/String;)V
  #278 = NameAndType        #59:#199      // append:(I)Ljava/lang/StringBuilder;
  #279 = NameAndType        #37:#31       // "<init>":(Ljava/lang/Throwable;)V
  #280 = NameAndType        #37:#201      // "<init>":(Ljava/util/ArrayList;)V
  #281 = NameAndType        #37:#202      // "<init>":(Ljava/util/ArrayList;I)V
  #282 = NameAndType        #37:#203      // "<init>":(Ljava/util/ArrayList;III)V
  #283 = NameAndType        #62:#208      // batchRemove:(Ljava/util/Collection;Z)Z
  #284 = NameAndType        #82:#231      // getJavaOISAccess:()Lsun/misc/JavaOISAccess;
  #285 = NameAndType        #64:#232      // checkArray:(Ljava/io/ObjectInputStream;Ljava/lang/Class;I)V
  #286 = NameAndType        #60:#28       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #287 = NameAndType        #135:#28      // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
  #288 = NameAndType        #61:#234      // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
  #289 = NameAndType        #68:#236      // copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
  #290 = NameAndType        #59:#237      // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #291 = NameAndType        #37:#238      // "<init>":(Ljava/util/ArrayList;Ljava/util/AbstractList;III)V
  #292 = NameAndType        #140:#239     // sort:([Ljava/lang/Object;IILjava/util/Comparator;)V
  #293 = NameAndType        #68:#240      // copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;
  #294 = Fieldref           #173.#241     // java/util/ArrayList.modCount:I
  #295 = Fieldref           #173.#242     // java/util/ArrayList.size:I
  #296 = Fieldref           #173.#243     // java/util/ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA:[Ljava/lang/Object;
  #297 = Fieldref           #173.#244     // java/util/ArrayList.EMPTY_ELEMENTDATA:[Ljava/lang/Object;
  #298 = Fieldref           #173.#245     // java/util/ArrayList.elementData:[Ljava/lang/Object;
  #299 = Methodref          #157.#246     // java/io/ObjectInputStream.readInt:()I
  #300 = Methodref          #157.#248     // java/io/ObjectInputStream.defaultReadObject:()V
  #301 = Methodref          #157.#265     // java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
  #302 = Methodref          #158.#249     // java/io/ObjectOutputStream.defaultWriteObject:()V
  #303 = Methodref          #158.#260     // java/io/ObjectOutputStream.writeInt:(I)V
  #304 = Methodref          #158.#270     // java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
  #305 = Methodref          #163.#277     // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
  #306 = Methodref          #164.#277     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #307 = Methodref          #165.#279     // java/lang/InternalError."<init>":(Ljava/lang/Throwable;)V
  #308 = Methodref          #166.#261     // java/lang/Math.max:(II)I
  #309 = Methodref          #167.#263     // java/lang/Object.getClass:()Ljava/lang/Class;
  #310 = Methodref          #167.#264     // java/lang/Object.clone:()Ljava/lang/Object;
  #311 = Methodref          #167.#272     // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #312 = Methodref          #168.#247     // java/lang/OutOfMemoryError."<init>":()V
  #313 = Methodref          #169.#247     // java/lang/StringBuilder."<init>":()V
  #314 = Methodref          #169.#275     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #315 = Methodref          #169.#278     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
  #316 = Methodref          #169.#290     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #317 = Methodref          #170.#288     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
  #318 = Methodref          #172.#247     // java/util/AbstractList."<init>":()V
  #319 = Methodref          #173.#250     // java/util/ArrayList.hugeCapacity:(I)I
  #320 = Methodref          #173.#253     // java/util/ArrayList.ensureCapacityInternal:(I)V
  #321 = Methodref          #173.#254     // java/util/ArrayList.ensureExplicitCapacity:(I)V
  #322 = Methodref          #173.#255     // java/util/ArrayList.fastRemove:(I)V
  #323 = Methodref          #173.#256     // java/util/ArrayList.grow:(I)V
  #324 = Methodref          #173.#257     // java/util/ArrayList.rangeCheck:(I)V
  #325 = Methodref          #173.#258     // java/util/ArrayList.rangeCheckForAdd:(I)V
  #326 = Methodref          #173.#262     // java/util/ArrayList.subListRangeCheck:(III)V
  #327 = Methodref          #173.#267     // java/util/ArrayList.elementData:(I)Ljava/lang/Object;
  #328 = Methodref          #173.#268     // java/util/ArrayList.indexOf:(Ljava/lang/Object;)I
  #329 = Methodref          #173.#274     // java/util/ArrayList.calculateCapacity:([Ljava/lang/Object;I)I
  #330 = Methodref          #173.#276     // java/util/ArrayList.outOfBoundsMsg:(I)Ljava/lang/String;
  #331 = Methodref          #173.#283     // java/util/ArrayList.batchRemove:(Ljava/util/Collection;Z)Z
  #332 = Methodref          #174.#282     // java/util/ArrayList$ArrayListSpliterator."<init>":(Ljava/util/ArrayList;III)V
  #333 = Methodref          #175.#280     // java/util/ArrayList$Itr."<init>":(Ljava/util/ArrayList;)V
  #334 = Methodref          #176.#281     // java/util/ArrayList$ListItr."<init>":(Ljava/util/ArrayList;I)V
  #335 = Methodref          #177.#291     // java/util/ArrayList$SubList."<init>":(Ljava/util/ArrayList;Ljava/util/AbstractList;III)V
  #336 = Methodref          #178.#289     // java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
  #337 = Methodref          #178.#292     // java/util/Arrays.sort:([Ljava/lang/Object;IILjava/util/Comparator;)V
  #338 = Methodref          #178.#293     // java/util/Arrays.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;
  #339 = Methodref          #179.#251     // java/util/BitSet.nextClearBit:(I)I
  #340 = Methodref          #179.#252     // java/util/BitSet."<init>":(I)V
  #341 = Methodref          #179.#259     // java/util/BitSet.set:(I)V
  #342 = Methodref          #181.#247     // java/util/ConcurrentModificationException."<init>":()V
  #343 = Methodref          #183.#287     // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
  #344 = Methodref          #189.#284     // sun/misc/SharedSecrets.getJavaOISAccess:()Lsun/misc/JavaOISAccess;
  #345 = InterfaceMethodref #180.#266     // java/util/Collection.toArray:()[Ljava/lang/Object;
  #346 = InterfaceMethodref #180.#271     // java/util/Collection.contains:(Ljava/lang/Object;)Z
  #347 = InterfaceMethodref #185.#269     // java/util/function/Consumer.accept:(Ljava/lang/Object;)V
  #348 = InterfaceMethodref #186.#273     // java/util/function/Predicate.test:(Ljava/lang/Object;)Z
  #349 = InterfaceMethodref #187.#286     // java/util/function/UnaryOperator.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #350 = InterfaceMethodref #188.#285     // sun/misc/JavaOISAccess.checkArray:(Ljava/io/ObjectInputStream;Ljava/lang/Class;I)V
  #351 = Utf8               ArrayList.java
  #352 = Utf8               ArrayListSpliterator
  #353 = Utf8               Itr
  #354 = Utf8               ListItr
  #355 = Utf8               SubList
{
  transient java.lang.Object[] elementData;
    descriptor: [Ljava/lang/Object;
    flags: ACC_TRANSIENT

  public java.util.ArrayList(int);
    descriptor: (I)V
    flags: ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokespecial #318                // Method java/util/AbstractList."<init>":()V
         4: iload_1
         5: ifle          19
         8: aload_0
         9: iload_1
        10: anewarray     #167                // class java/lang/Object
        13: putfield      #298                // Field elementData:[Ljava/lang/Object;
        16: goto          60
        19: iload_1
        20: ifne          33
        23: aload_0
        24: getstatic     #297                // Field EMPTY_ELEMENTDATA:[Ljava/lang/Object;
        27: putfield      #298                // Field elementData:[Ljava/lang/Object;
        30: goto          60
        33: new           #163                // class java/lang/IllegalArgumentException
        36: dup
        37: new           #169                // class java/lang/StringBuilder
        40: dup
        41: invokespecial #313                // Method java/lang/StringBuilder."<init>":()V
        44: ldc           #6                  // String Illegal Capacity:
        46: invokevirtual #316                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        49: iload_1
        50: invokevirtual #315                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        53: invokevirtual #314                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        56: invokespecial #305                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        59: athrow
        60: return
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class java/util/ArrayList, int ]
          stack = []
        frame_type = 13 /* same */
        frame_type = 26 /* same */
      LineNumberTable:
        line 151: 0
        line 152: 4
        line 153: 8
        line 154: 19
        line 155: 23
        line 157: 33
        line 160: 60

  public java.util.ArrayList();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #318                // Method java/util/AbstractList."<init>":()V
         4: aload_0
         5: getstatic     #296                // Field DEFAULTCAPACITY_EMPTY_ELEMENTDATA:[Ljava/lang/Object;
         8: putfield      #298                // Field elementData:[Ljava/lang/Object;
        11: return
      LineNumberTable:
        line 165: 0
        line 166: 4
        line 167: 11

  public java.util.ArrayList(java.util.Collection<? extends E>);
    descriptor: (Ljava/util/Collection;)V
    flags: ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokespecial #318                // Method java/util/AbstractList."<init>":()V
         4: aload_0
         5: aload_1
         6: invokeinterface #345,  1          // InterfaceMethod java/util/Collection.toArray:()[Ljava/lang/Object;
        11: putfield      #298                // Field elementData:[Ljava/lang/Object;
        14: aload_0
        15: aload_0
        16: getfield      #298                // Field elementData:[Ljava/lang/Object;
        19: arraylength
        20: dup_x1
        21: putfield      #295                // Field size:I
        24: ifeq          59
        27: aload_0
        28: getfield      #298                // Field elementData:[Ljava/lang/Object;
        31: invokevirtual #309                // Method java/lang/Object.getClass:()Ljava/lang/Class;
        34: ldc           #11                 // class "[Ljava/lang/Object;"
        36: if_acmpeq     66
        39: aload_0
        40: aload_0
        41: getfield      #298                // Field elementData:[Ljava/lang/Object;
        44: aload_0
        45: getfield      #295                // Field size:I
        48: ldc           #11                 // class "[Ljava/lang/Object;"
        50: invokestatic  #338                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;
        53: putfield      #298                // Field elementData:[Ljava/lang/Object;
        56: goto          66
        59: aload_0
        60: getstatic     #297                // Field EMPTY_ELEMENTDATA:[Ljava/lang/Object;
        63: putfield      #298                // Field elementData:[Ljava/lang/Object;
        66: return
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 59
          locals = [ class java/util/ArrayList, class java/util/Collection ]
          stack = []
        frame_type = 6 /* same */
      LineNumberTable:
        line 177: 0
        line 178: 4
        line 179: 14
        line 181: 27
        line 182: 39
        line 185: 59
        line 187: 66
    Signature: #211                         // (Ljava/util/Collection<+TE;>;)V

  public void trimToSize();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: dup
         2: getfield      #294                // Field modCount:I
         5: iconst_1
         6: iadd
         7: putfield      #294                // Field modCount:I
        10: aload_0
        11: getfield      #295                // Field size:I
        14: aload_0
        15: getfield      #298                // Field elementData:[Ljava/lang/Object;
        18: arraylength
        19: if_icmpge     50
        22: aload_0
        23: aload_0
        24: getfield      #295                // Field size:I
        27: ifne          36
        30: getstatic     #297                // Field EMPTY_ELEMENTDATA:[Ljava/lang/Object;
        33: goto          47
        36: aload_0
        37: getfield      #298                // Field elementData:[Ljava/lang/Object;
        40: aload_0
        41: getfield      #295                // Field size:I
        44: invokestatic  #336                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
        47: putfield      #298                // Field elementData:[Ljava/lang/Object;
        50: return
      StackMapTable: number_of_entries = 3
        frame_type = 100 /* same_locals_1_stack_item */
          stack = [ class java/util/ArrayList ]
        frame_type = 255 /* full_frame */
          offset_delta = 10
          locals = [ class java/util/ArrayList ]
          stack = [ class java/util/ArrayList, class "[Ljava/lang/Object;" ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 195: 0
        line 196: 10
        line 197: 22
        line 199: 44
        line 201: 50

  public void ensureCapacity(int);
    descriptor: (I)V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: getfield      #298                // Field elementData:[Ljava/lang/Object;
         4: getstatic     #296                // Field DEFAULTCAPACITY_EMPTY_ELEMENTDATA:[Ljava/lang/Object;
         7: if_acmpeq     14
        10: iconst_0
        11: goto          16
        14: bipush        10
        16: istore_2
        17: iload_1
        18: iload_2
        19: if_icmple     27
        22: aload_0
        23: iload_1
        24: invokespecial #321                // Method ensureExplicitCapacity:(I)V
        27: return
      StackMapTable: number_of_entries = 3
        frame_type = 14 /* same */
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 10
          locals = [ int ]
      LineNumberTable:
        line 211: 0
        line 218: 17
        line 219: 22
        line 221: 27

  public int size();
    descriptor: ()I
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #295                // Field size:I
         4: ireturn
      LineNumberTable:
        line 282: 0

  public boolean isEmpty();
    descriptor: ()Z
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #295                // Field size:I
         4: ifne          11
         7: iconst_1
         8: goto          12
        11: iconst_0
        12: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 291: 0

  public boolean contains(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #328                // Method indexOf:(Ljava/lang/Object;)I
         5: iflt          12
         8: iconst_1
         9: goto          13
        12: iconst_0
        13: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 304: 0

  public int indexOf(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_1
         1: ifnonnull     34
         4: iconst_0
         5: istore_2
         6: iload_2
         7: aload_0
         8: getfield      #295                // Field size:I
        11: if_icmpge     31
        14: aload_0
        15: getfield      #298                // Field elementData:[Ljava/lang/Object;
        18: iload_2
        19: aaload
        20: ifnonnull     25
        23: iload_2
        24: ireturn
        25: iinc          2, 1
        28: goto          6
        31: goto          65
        34: iconst_0
        35: istore_2
        36: iload_2
        37: aload_0
        38: getfield      #295                // Field size:I
        41: if_icmpge     65
        44: aload_1
        45: aload_0
        46: getfield      #298                // Field elementData:[Ljava/lang/Object;
        49: iload_2
        50: aaload
        51: invokevirtual #311                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        54: ifeq          59
        57: iload_2
        58: ireturn
        59: iinc          2, 1
        62: goto          36
        65: iconst_m1
        66: ireturn
      StackMapTable: number_of_entries = 7
        frame_type = 252 /* append */
          offset_delta = 6
          locals = [ int ]
        frame_type = 18 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
        frame_type = 2 /* same */
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
        frame_type = 22 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
      LineNumberTable:
        line 315: 0
        line 316: 4
        line 317: 14
        line 318: 23
        line 316: 25
        line 320: 34
        line 321: 44
        line 322: 57
        line 320: 59
        line 324: 65

  public int lastIndexOf(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_1
         1: ifnonnull     35
         4: aload_0
         5: getfield      #295                // Field size:I
         8: iconst_1
         9: isub
        10: istore_2
        11: iload_2
        12: iflt          32
        15: aload_0
        16: getfield      #298                // Field elementData:[Ljava/lang/Object;
        19: iload_2
        20: aaload
        21: ifnonnull     26
        24: iload_2
        25: ireturn
        26: iinc          2, -1
        29: goto          11
        32: goto          67
        35: aload_0
        36: getfield      #295                // Field size:I
        39: iconst_1
        40: isub
        41: istore_2
        42: iload_2
        43: iflt          67
        46: aload_1
        47: aload_0
        48: getfield      #298                // Field elementData:[Ljava/lang/Object;
        51: iload_2
        52: aaload
        53: invokevirtual #311                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        56: ifeq          61
        59: iload_2
        60: ireturn
        61: iinc          2, -1
        64: goto          42
        67: iconst_m1
        68: ireturn
      StackMapTable: number_of_entries = 7
        frame_type = 252 /* append */
          offset_delta = 11
          locals = [ int ]
        frame_type = 14 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
        frame_type = 2 /* same */
        frame_type = 252 /* append */
          offset_delta = 6
          locals = [ int ]
        frame_type = 18 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
      LineNumberTable:
        line 335: 0
        line 336: 4
        line 337: 15
        line 338: 24
        line 336: 26
        line 340: 35
        line 341: 46
        line 342: 59
        line 340: 61
        line 344: 67

  public java.lang.Object clone();
    descriptor: ()Ljava/lang/Object;
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokespecial #310                // Method java/lang/Object.clone:()Ljava/lang/Object;
         4: checkcast     #173                // class java/util/ArrayList
         7: astore_1
         8: aload_1
         9: aload_0
        10: getfield      #298                // Field elementData:[Ljava/lang/Object;
        13: aload_0
        14: getfield      #295                // Field size:I
        17: invokestatic  #336                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
        20: putfield      #298                // Field elementData:[Ljava/lang/Object;
        23: aload_1
        24: iconst_0
        25: putfield      #294                // Field modCount:I
        28: aload_1
        29: areturn
        30: astore_1
        31: new           #165                // class java/lang/InternalError
        34: dup
        35: aload_1
        36: invokespecial #307                // Method java/lang/InternalError."<init>":(Ljava/lang/Throwable;)V
        39: athrow
      Exception table:
         from    to  target type
             0    29    30   Class java/lang/CloneNotSupportedException
      StackMapTable: number_of_entries = 1
        frame_type = 94 /* same_locals_1_stack_item */
          stack = [ class java/lang/CloneNotSupportedException ]
      LineNumberTable:
        line 355: 0
        line 356: 8
        line 357: 23
        line 358: 28
        line 359: 30
        line 361: 31

  public java.lang.Object[] toArray();
    descriptor: ()[Ljava/lang/Object;
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #298                // Field elementData:[Ljava/lang/Object;
         4: aload_0
         5: getfield      #295                // Field size:I
         8: invokestatic  #336                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
        11: areturn
      LineNumberTable:
        line 380: 0

  public <T extends java.lang.Object> T[] toArray(T[]);
    descriptor: ([Ljava/lang/Object;)[Ljava/lang/Object;
    flags: ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_1
         1: arraylength
         2: aload_0
         3: getfield      #295                // Field size:I
         6: if_icmpge     28
         9: aload_0
        10: getfield      #298                // Field elementData:[Ljava/lang/Object;
        13: aload_0
        14: getfield      #295                // Field size:I
        17: aload_1
        18: invokevirtual #309                // Method java/lang/Object.getClass:()Ljava/lang/Class;
        21: invokestatic  #338                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;
        24: checkcast     #11                 // class "[Ljava/lang/Object;"
        27: areturn
        28: aload_0
        29: getfield      #298                // Field elementData:[Ljava/lang/Object;
        32: iconst_0
        33: aload_1
        34: iconst_0
        35: aload_0
        36: getfield      #295                // Field size:I
        39: invokestatic  #317                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
        42: aload_1
        43: arraylength
        44: aload_0
        45: getfield      #295                // Field size:I
        48: if_icmple     58
        51: aload_1
        52: aload_0
        53: getfield      #295                // Field size:I
        56: aconst_null
        57: aastore
        58: aload_1
        59: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 28 /* same */
        frame_type = 29 /* same */
      LineNumberTable:
        line 409: 0
        line 411: 9
        line 412: 28
        line 413: 42
        line 414: 51
        line 415: 58
    Signature: #190                         // <T:Ljava/lang/Object;>([TT;)[TT;

  E elementData(int);
    descriptor: (I)Ljava/lang/Object;
    flags:
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #298                // Field elementData:[Ljava/lang/Object;
         4: iload_1
         5: aaload
         6: areturn
      LineNumberTable:
        line 422: 0
    Signature: #19                          // (I)TE;

  public E get(int);
    descriptor: (I)Ljava/lang/Object;
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #324                // Method rangeCheck:(I)V
         5: aload_0
         6: iload_1
         7: invokevirtual #327                // Method elementData:(I)Ljava/lang/Object;
        10: areturn
      LineNumberTable:
        line 433: 0
        line 435: 5
    Signature: #19                          // (I)TE;

  public E set(int, E);
    descriptor: (ILjava/lang/Object;)Ljava/lang/Object;
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=3
         0: aload_0
         1: iload_1
         2: invokespecial #324                // Method rangeCheck:(I)V
         5: aload_0
         6: iload_1
         7: invokevirtual #327                // Method elementData:(I)Ljava/lang/Object;
        10: astore_3
        11: aload_0
        12: getfield      #298                // Field elementData:[Ljava/lang/Object;
        15: iload_1
        16: aload_2
        17: aastore
        18: aload_3
        19: areturn
      LineNumberTable:
        line 448: 0
        line 450: 5
        line 451: 11
        line 452: 18
    Signature: #24                          // (ITE;)TE;

  public boolean add(E);
    descriptor: (Ljava/lang/Object;)Z
    flags: ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: getfield      #295                // Field size:I
         5: iconst_1
         6: iadd
         7: invokespecial #320                // Method ensureCapacityInternal:(I)V
        10: aload_0
        11: getfield      #298                // Field elementData:[Ljava/lang/Object;
        14: aload_0
        15: dup
        16: getfield      #295                // Field size:I
        19: dup_x1
        20: iconst_1
        21: iadd
        22: putfield      #295                // Field size:I
        25: aload_1
        26: aastore
        27: iconst_1
        28: ireturn
      LineNumberTable:
        line 462: 0
        line 463: 10
        line 464: 27
    Signature: #32                          // (TE;)Z

  public void add(int, E);
    descriptor: (ILjava/lang/Object;)V
    flags: ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: invokespecial #325                // Method rangeCheckForAdd:(I)V
         5: aload_0
         6: aload_0
         7: getfield      #295                // Field size:I
        10: iconst_1
        11: iadd
        12: invokespecial #320                // Method ensureCapacityInternal:(I)V
        15: aload_0
        16: getfield      #298                // Field elementData:[Ljava/lang/Object;
        19: iload_1
        20: aload_0
        21: getfield      #298                // Field elementData:[Ljava/lang/Object;
        24: iload_1
        25: iconst_1
        26: iadd
        27: aload_0
        28: getfield      #295                // Field size:I
        31: iload_1
        32: isub
        33: invokestatic  #317                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
        36: aload_0
        37: getfield      #298                // Field elementData:[Ljava/lang/Object;
        40: iload_1
        41: aload_2
        42: aastore
        43: aload_0
        44: dup
        45: getfield      #295                // Field size:I
        48: iconst_1
        49: iadd
        50: putfield      #295                // Field size:I
        53: return
      LineNumberTable:
        line 477: 0
        line 479: 5
        line 480: 15
        line 482: 36
        line 483: 43
        line 484: 53
    Signature: #25                          // (ITE;)V

  public E remove(int);
    descriptor: (I)Ljava/lang/Object;
    flags: ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #324                // Method rangeCheck:(I)V
         5: aload_0
         6: dup
         7: getfield      #294                // Field modCount:I
        10: iconst_1
        11: iadd
        12: putfield      #294                // Field modCount:I
        15: aload_0
        16: iload_1
        17: invokevirtual #327                // Method elementData:(I)Ljava/lang/Object;
        20: astore_2
        21: aload_0
        22: getfield      #295                // Field size:I
        25: iload_1
        26: isub
        27: iconst_1
        28: isub
        29: istore_3
        30: iload_3
        31: ifle          50
        34: aload_0
        35: getfield      #298                // Field elementData:[Ljava/lang/Object;
        38: iload_1
        39: iconst_1
        40: iadd
        41: aload_0
        42: getfield      #298                // Field elementData:[Ljava/lang/Object;
        45: iload_1
        46: iload_3
        47: invokestatic  #317                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
        50: aload_0
        51: getfield      #298                // Field elementData:[Ljava/lang/Object;
        54: aload_0
        55: dup
        56: getfield      #295                // Field size:I
        59: iconst_1
        60: isub
        61: dup_x1
        62: putfield      #295                // Field size:I
        65: aconst_null
        66: aastore
        67: aload_2
        68: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 50
          locals = [ class java/lang/Object, int ]
      LineNumberTable:
        line 496: 0
        line 498: 5
        line 499: 15
        line 501: 21
        line 502: 30
        line 503: 34
        line 505: 50
        line 507: 67
    Signature: #19                          // (I)TE;

  public boolean remove(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_1
         1: ifnonnull     39
         4: iconst_0
         5: istore_2
         6: iload_2
         7: aload_0
         8: getfield      #295                // Field size:I
        11: if_icmpge     36
        14: aload_0
        15: getfield      #298                // Field elementData:[Ljava/lang/Object;
        18: iload_2
        19: aaload
        20: ifnonnull     30
        23: aload_0
        24: iload_2
        25: invokespecial #322                // Method fastRemove:(I)V
        28: iconst_1
        29: ireturn
        30: iinc          2, 1
        33: goto          6
        36: goto          75
        39: iconst_0
        40: istore_2
        41: iload_2
        42: aload_0
        43: getfield      #295                // Field size:I
        46: if_icmpge     75
        49: aload_1
        50: aload_0
        51: getfield      #298                // Field elementData:[Ljava/lang/Object;
        54: iload_2
        55: aaload
        56: invokevirtual #311                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        59: ifeq          69
        62: aload_0
        63: iload_2
        64: invokespecial #322                // Method fastRemove:(I)V
        67: iconst_1
        68: ireturn
        69: iinc          2, 1
        72: goto          41
        75: iconst_0
        76: ireturn
      StackMapTable: number_of_entries = 7
        frame_type = 252 /* append */
          offset_delta = 6
          locals = [ int ]
        frame_type = 23 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
        frame_type = 2 /* same */
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
        frame_type = 27 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
      LineNumberTable:
        line 524: 0
        line 525: 4
        line 526: 14
        line 527: 23
        line 528: 28
        line 525: 30
        line 531: 39
        line 532: 49
        line 533: 62
        line 534: 67
        line 531: 69
        line 537: 75

  public void clear();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: dup
         2: getfield      #294                // Field modCount:I
         5: iconst_1
         6: iadd
         7: putfield      #294                // Field modCount:I
        10: iconst_0
        11: istore_1
        12: iload_1
        13: aload_0
        14: getfield      #295                // Field size:I
        17: if_icmpge     33
        20: aload_0
        21: getfield      #298                // Field elementData:[Ljava/lang/Object;
        24: iload_1
        25: aconst_null
        26: aastore
        27: iinc          1, 1
        30: goto          12
        33: aload_0
        34: iconst_0
        35: putfield      #295                // Field size:I
        38: return
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 12
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 20
      LineNumberTable:
        line 558: 0
        line 561: 10
        line 562: 20
        line 561: 27
        line 564: 33
        line 565: 38

  public boolean addAll(java.util.Collection<? extends E>);
    descriptor: (Ljava/util/Collection;)Z
    flags: ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=2
         0: aload_1
         1: invokeinterface #345,  1          // InterfaceMethod java/util/Collection.toArray:()[Ljava/lang/Object;
         6: astore_2
         7: aload_2
         8: arraylength
         9: istore_3
        10: aload_0
        11: aload_0
        12: getfield      #295                // Field size:I
        15: iload_3
        16: iadd
        17: invokespecial #320                // Method ensureCapacityInternal:(I)V
        20: aload_2
        21: iconst_0
        22: aload_0
        23: getfield      #298                // Field elementData:[Ljava/lang/Object;
        26: aload_0
        27: getfield      #295                // Field size:I
        30: iload_3
        31: invokestatic  #317                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
        34: aload_0
        35: dup
        36: getfield      #295                // Field size:I
        39: iload_3
        40: iadd
        41: putfield      #295                // Field size:I
        44: iload_3
        45: ifeq          52
        48: iconst_1
        49: goto          53
        52: iconst_0
        53: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 52
          locals = [ class "[Ljava/lang/Object;", int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 581: 0
        line 582: 7
        line 583: 10
        line 584: 20
        line 585: 34
        line 586: 44
    Signature: #212                         // (Ljava/util/Collection<+TE;>;)Z

  public boolean addAll(int, java.util.Collection<? extends E>);
    descriptor: (ILjava/util/Collection;)Z
    flags: ACC_PUBLIC
    Code:
      stack=5, locals=6, args_size=3
         0: aload_0
         1: iload_1
         2: invokespecial #325                // Method rangeCheckForAdd:(I)V
         5: aload_2
         6: invokeinterface #345,  1          // InterfaceMethod java/util/Collection.toArray:()[Ljava/lang/Object;
        11: astore_3
        12: aload_3
        13: arraylength
        14: istore        4
        16: aload_0
        17: aload_0
        18: getfield      #295                // Field size:I
        21: iload         4
        23: iadd
        24: invokespecial #320                // Method ensureCapacityInternal:(I)V
        27: aload_0
        28: getfield      #295                // Field size:I
        31: iload_1
        32: isub
        33: istore        5
        35: iload         5
        37: ifle          58
        40: aload_0
        41: getfield      #298                // Field elementData:[Ljava/lang/Object;
        44: iload_1
        45: aload_0
        46: getfield      #298                // Field elementData:[Ljava/lang/Object;
        49: iload_1
        50: iload         4
        52: iadd
        53: iload         5
        55: invokestatic  #317                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
        58: aload_3
        59: iconst_0
        60: aload_0
        61: getfield      #298                // Field elementData:[Ljava/lang/Object;
        64: iload_1
        65: iload         4
        67: invokestatic  #317                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
        70: aload_0
        71: dup
        72: getfield      #295                // Field size:I
        75: iload         4
        77: iadd
        78: putfield      #295                // Field size:I
        81: iload         4
        83: ifeq          90
        86: iconst_1
        87: goto          91
        90: iconst_0
        91: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 254 /* append */
          offset_delta = 58
          locals = [ class "[Ljava/lang/Object;", int, int ]
        frame_type = 31 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 605: 0
        line 607: 5
        line 608: 12
        line 609: 16
        line 611: 27
        line 612: 35
        line 613: 40
        line 616: 58
        line 617: 70
        line 618: 81
    Signature: #205                         // (ILjava/util/Collection<+TE;>;)Z

  protected void removeRange(int, int);
    descriptor: (II)V
    flags: ACC_PROTECTED
    Code:
      stack=5, locals=6, args_size=3
         0: aload_0
         1: dup
         2: getfield      #294                // Field modCount:I
         5: iconst_1
         6: iadd
         7: putfield      #294                // Field modCount:I
        10: aload_0
        11: getfield      #295                // Field size:I
        14: iload_2
        15: isub
        16: istore_3
        17: aload_0
        18: getfield      #298                // Field elementData:[Ljava/lang/Object;
        21: iload_2
        22: aload_0
        23: getfield      #298                // Field elementData:[Ljava/lang/Object;
        26: iload_1
        27: iload_3
        28: invokestatic  #317                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
        31: aload_0
        32: getfield      #295                // Field size:I
        35: iload_2
        36: iload_1
        37: isub
        38: isub
        39: istore        4
        41: iload         4
        43: istore        5
        45: iload         5
        47: aload_0
        48: getfield      #295                // Field size:I
        51: if_icmpge     68
        54: aload_0
        55: getfield      #298                // Field elementData:[Ljava/lang/Object;
        58: iload         5
        60: aconst_null
        61: aastore
        62: iinc          5, 1
        65: goto          45
        68: aload_0
        69: iload         4
        71: putfield      #295                // Field size:I
        74: return
      StackMapTable: number_of_entries = 2
        frame_type = 254 /* append */
          offset_delta = 45
          locals = [ int, int, int ]
        frame_type = 250 /* chop */
          offset_delta = 22
      LineNumberTable:
        line 636: 0
        line 637: 10
        line 638: 17
        line 642: 31
        line 643: 41
        line 644: 54
        line 643: 62
        line 646: 68
        line 647: 74

  public boolean removeAll(java.util.Collection<?>);
    descriptor: (Ljava/util/Collection;)Z
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: invokestatic  #343                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: aload_0
         6: aload_1
         7: iconst_0
         8: invokespecial #331                // Method batchRemove:(Ljava/util/Collection;Z)Z
        11: ireturn
      LineNumberTable:
        line 693: 0
        line 694: 5
    Signature: #209                         // (Ljava/util/Collection<*>;)Z

  public boolean retainAll(java.util.Collection<?>);
    descriptor: (Ljava/util/Collection;)Z
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: invokestatic  #343                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: aload_0
         6: aload_1
         7: iconst_1
         8: invokespecial #331                // Method batchRemove:(Ljava/util/Collection;Z)Z
        11: ireturn
      LineNumberTable:
        line 714: 0
        line 715: 5
    Signature: #209                         // (Ljava/util/Collection<*>;)Z

  public java.util.ListIterator<E> listIterator(int);
    descriptor: (I)Ljava/util/ListIterator;
    flags: ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: iload_1
         1: iflt          12
         4: iload_1
         5: aload_0
         6: getfield      #295                // Field size:I
         9: if_icmple     39
        12: new           #164                // class java/lang/IndexOutOfBoundsException
        15: dup
        16: new           #169                // class java/lang/StringBuilder
        19: dup
        20: invokespecial #313                // Method java/lang/StringBuilder."<init>":()V
        23: ldc           #7                  // String Index:
        25: invokevirtual #316                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: iload_1
        29: invokevirtual #315                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        32: invokevirtual #314                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        35: invokespecial #306                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        38: athrow
        39: new           #176                // class java/util/ArrayList$ListItr
        42: dup
        43: aload_0
        44: iload_1
        45: invokespecial #334                // Method java/util/ArrayList$ListItr."<init>":(Ljava/util/ArrayList;I)V
        48: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 26 /* same */
      LineNumberTable:
        line 815: 0
        line 816: 12
        line 817: 39
    Signature: #222                         // (I)Ljava/util/ListIterator<TE;>;

  public java.util.ListIterator<E> listIterator();
    descriptor: ()Ljava/util/ListIterator;
    flags: ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #176                // class java/util/ArrayList$ListItr
         3: dup
         4: aload_0
         5: iconst_0
         6: invokespecial #334                // Method java/util/ArrayList$ListItr."<init>":(Ljava/util/ArrayList;I)V
         9: areturn
      LineNumberTable:
        line 829: 0
    Signature: #220                         // ()Ljava/util/ListIterator<TE;>;

  public java.util.Iterator<E> iterator();
    descriptor: ()Ljava/util/Iterator;
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #175                // class java/util/ArrayList$Itr
         3: dup
         4: aload_0
         5: invokespecial #333                // Method java/util/ArrayList$Itr."<init>":(Ljava/util/ArrayList;)V
         8: areturn
      LineNumberTable:
        line 840: 0
    Signature: #216                         // ()Ljava/util/Iterator<TE;>;

  public java.util.List<E> subList(int, int);
    descriptor: (II)Ljava/util/List;
    flags: ACC_PUBLIC
    Code:
      stack=7, locals=3, args_size=3
         0: iload_1
         1: iload_2
         2: aload_0
         3: getfield      #295                // Field size:I
         6: invokestatic  #326                // Method subListRangeCheck:(III)V
         9: new           #177                // class java/util/ArrayList$SubList
        12: dup
        13: aload_0
        14: aload_0
        15: iconst_0
        16: iload_1
        17: iload_2
        18: invokespecial #335                // Method java/util/ArrayList$SubList."<init>":(Ljava/util/ArrayList;Ljava/util/AbstractList;III)V
        21: areturn
      LineNumberTable:
        line 1004: 0
        line 1005: 9
    Signature: #218                         // (II)Ljava/util/List<TE;>;

  static void subListRangeCheck(int, int, int);
    descriptor: (III)V
    flags: ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: iload_0
         1: ifge          31
         4: new           #164                // class java/lang/IndexOutOfBoundsException
         7: dup
         8: new           #169                // class java/lang/StringBuilder
        11: dup
        12: invokespecial #313                // Method java/lang/StringBuilder."<init>":()V
        15: ldc           #8                  // String fromIndex =
        17: invokevirtual #316                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        20: iload_0
        21: invokevirtual #315                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        24: invokevirtual #314                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        27: invokespecial #306                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        30: athrow
        31: iload_1
        32: iload_2
        33: if_icmple     63
        36: new           #164                // class java/lang/IndexOutOfBoundsException
        39: dup
        40: new           #169                // class java/lang/StringBuilder
        43: dup
        44: invokespecial #313                // Method java/lang/StringBuilder."<init>":()V
        47: ldc           #10                 // String toIndex =
        49: invokevirtual #316                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        52: iload_1
        53: invokevirtual #315                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        56: invokevirtual #314                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        59: invokespecial #306                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        62: athrow
        63: iload_0
        64: iload_1
        65: if_icmple     109
        68: new           #163                // class java/lang/IllegalArgumentException
        71: dup
        72: new           #169                // class java/lang/StringBuilder
        75: dup
        76: invokespecial #313                // Method java/lang/StringBuilder."<init>":()V
        79: ldc           #9                  // String fromIndex(
        81: invokevirtual #316                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        84: iload_0
        85: invokevirtual #315                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        88: ldc           #4                  // String ) > toIndex(
        90: invokevirtual #316                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        93: iload_1
        94: invokevirtual #315                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        97: ldc           #3                  // String )
        99: invokevirtual #316                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       102: invokevirtual #314                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       105: invokespecial #305                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       108: athrow
       109: return
      StackMapTable: number_of_entries = 3
        frame_type = 31 /* same */
        frame_type = 31 /* same */
        frame_type = 45 /* same */
      LineNumberTable:
        line 1009: 0
        line 1010: 4
        line 1011: 31
        line 1012: 36
        line 1013: 63
        line 1014: 68
        line 1016: 109

  public void forEach(java.util.function.Consumer<? super E>);
    descriptor: (Ljava/util/function/Consumer;)V
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=6, args_size=2
         0: aload_1
         1: invokestatic  #343                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: aload_0
         6: getfield      #294                // Field modCount:I
         9: istore_2
        10: aload_0
        11: getfield      #298                // Field elementData:[Ljava/lang/Object;
        14: checkcast     #11                 // class "[Ljava/lang/Object;"
        17: astore_3
        18: aload_0
        19: getfield      #295                // Field size:I
        22: istore        4
        24: iconst_0
        25: istore        5
        27: aload_0
        28: getfield      #294                // Field modCount:I
        31: iload_2
        32: if_icmpne     58
        35: iload         5
        37: iload         4
        39: if_icmpge     58
        42: aload_1
        43: aload_3
        44: iload         5
        46: aaload
        47: invokeinterface #347,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
        52: iinc          5, 1
        55: goto          27
        58: aload_0
        59: getfield      #294                // Field modCount:I
        62: iload_2
        63: if_icmpeq     74
        66: new           #181                // class java/util/ConcurrentModificationException
        69: dup
        70: invokespecial #342                // Method java/util/ConcurrentModificationException."<init>":()V
        73: athrow
        74: return
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [ class java/util/ArrayList, class java/util/function/Consumer, int, class "[Ljava/lang/Object;", int, int ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 30
        frame_type = 15 /* same */
      LineNumberTable:
        line 1251: 0
        line 1252: 5
        line 1254: 10
        line 1255: 18
        line 1256: 24
        line 1257: 42
        line 1256: 52
        line 1259: 58
        line 1260: 66
        line 1262: 74
    Signature: #226                         // (Ljava/util/function/Consumer<-TE;>;)V

  public java.util.Spliterator<E> spliterator();
    descriptor: ()Ljava/util/Spliterator;
    flags: ACC_PUBLIC
    Code:
      stack=6, locals=1, args_size=1
         0: new           #174                // class java/util/ArrayList$ArrayListSpliterator
         3: dup
         4: aload_0
         5: iconst_0
         6: iconst_m1
         7: iconst_0
         8: invokespecial #332                // Method java/util/ArrayList$ArrayListSpliterator."<init>":(Ljava/util/ArrayList;III)V
        11: areturn
      LineNumberTable:
        line 1279: 0
    Signature: #224                         // ()Ljava/util/Spliterator<TE;>;

  public boolean removeIf(java.util.function.Predicate<? super E>);
    descriptor: (Ljava/util/function/Predicate;)Z
    flags: ACC_PUBLIC
    Code:
      stack=4, locals=10, args_size=2
         0: aload_1
         1: invokestatic  #343                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: iconst_0
         6: istore_2
         7: new           #179                // class java/util/BitSet
        10: dup
        11: aload_0
        12: getfield      #295                // Field size:I
        15: invokespecial #340                // Method java/util/BitSet."<init>":(I)V
        18: astore_3
        19: aload_0
        20: getfield      #294                // Field modCount:I
        23: istore        4
        25: aload_0
        26: getfield      #295                // Field size:I
        29: istore        5
        31: iconst_0
        32: istore        6
        34: aload_0
        35: getfield      #294                // Field modCount:I
        38: iload         4
        40: if_icmpne     85
        43: iload         6
        45: iload         5
        47: if_icmpge     85
        50: aload_0
        51: getfield      #298                // Field elementData:[Ljava/lang/Object;
        54: iload         6
        56: aaload
        57: astore        7
        59: aload_1
        60: aload         7
        62: invokeinterface #348,  2          // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
        67: ifeq          79
        70: aload_3
        71: iload         6
        73: invokevirtual #341                // Method java/util/BitSet.set:(I)V
        76: iinc          2, 1
        79: iinc          6, 1
        82: goto          34
        85: aload_0
        86: getfield      #294                // Field modCount:I
        89: iload         4
        91: if_icmpeq     102
        94: new           #181                // class java/util/ConcurrentModificationException
        97: dup
        98: invokespecial #342                // Method java/util/ConcurrentModificationException."<init>":()V
       101: athrow
       102: iload_2
       103: ifle          110
       106: iconst_1
       107: goto          111
       110: iconst_0
       111: istore        6
       113: iload         6
       115: ifeq          233
       118: iload         5
       120: iload_2
       121: isub
       122: istore        7
       124: iconst_0
       125: istore        8
       127: iconst_0
       128: istore        9
       130: iload         8
       132: iload         5
       134: if_icmpge     175
       137: iload         9
       139: iload         7
       141: if_icmpge     175
       144: aload_3
       145: iload         8
       147: invokevirtual #339                // Method java/util/BitSet.nextClearBit:(I)I
       150: istore        8
       152: aload_0
       153: getfield      #298                // Field elementData:[Ljava/lang/Object;
       156: iload         9
       158: aload_0
       159: getfield      #298                // Field elementData:[Ljava/lang/Object;
       162: iload         8
       164: aaload
       165: aastore
       166: iinc          8, 1
       169: iinc          9, 1
       172: goto          130
       175: iload         7
       177: istore        8
       179: iload         8
       181: iload         5
       183: if_icmpge     200
       186: aload_0
       187: getfield      #298                // Field elementData:[Ljava/lang/Object;
       190: iload         8
       192: aconst_null
       193: aastore
       194: iinc          8, 1
       197: goto          179
       200: aload_0
       201: iload         7
       203: putfield      #295                // Field size:I
       206: aload_0
       207: getfield      #294                // Field modCount:I
       210: iload         4
       212: if_icmpeq     223
       215: new           #181                // class java/util/ConcurrentModificationException
       218: dup
       219: invokespecial #342                // Method java/util/ConcurrentModificationException."<init>":()V
       222: athrow
       223: aload_0
       224: dup
       225: getfield      #294                // Field modCount:I
       228: iconst_1
       229: iadd
       230: putfield      #294                // Field modCount:I
       233: iload         6
       235: ireturn
      StackMapTable: number_of_entries = 12
        frame_type = 255 /* full_frame */
          offset_delta = 34
          locals = [ class java/util/ArrayList, class java/util/function/Predicate, int, class java/util/BitSet, int, int, int ]
          stack = []
        frame_type = 44 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
        frame_type = 16 /* same */
        frame_type = 7 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class java/util/ArrayList, class java/util/function/Predicate, int, class java/util/BitSet, int, int, int, int, int, int ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 44
        frame_type = 252 /* append */
          offset_delta = 3
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 20
        frame_type = 22 /* same */
        frame_type = 250 /* chop */
          offset_delta = 9
      LineNumberTable:
        line 1402: 0
        line 1406: 5
        line 1407: 7
        line 1408: 19
        line 1409: 25
        line 1410: 31
        line 1412: 50
        line 1413: 59
        line 1414: 70
        line 1415: 76
        line 1410: 79
        line 1418: 85
        line 1419: 94
        line 1423: 102
        line 1424: 113
        line 1425: 118
        line 1426: 124
        line 1427: 144
        line 1428: 152
        line 1426: 166
        line 1430: 175
        line 1431: 186
        line 1430: 194
        line 1433: 200
        line 1434: 206
        line 1435: 215
        line 1437: 223
        line 1440: 233
    Signature: #228                         // (Ljava/util/function/Predicate<-TE;>;)Z

  public void replaceAll(java.util.function.UnaryOperator<E>);
    descriptor: (Ljava/util/function/UnaryOperator;)V
    flags: ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=2
         0: aload_1
         1: invokestatic  #343                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: aload_0
         6: getfield      #294                // Field modCount:I
         9: istore_2
        10: aload_0
        11: getfield      #295                // Field size:I
        14: istore_3
        15: iconst_0
        16: istore        4
        18: aload_0
        19: getfield      #294                // Field modCount:I
        22: iload_2
        23: if_icmpne     58
        26: iload         4
        28: iload_3
        29: if_icmpge     58
        32: aload_0
        33: getfield      #298                // Field elementData:[Ljava/lang/Object;
        36: iload         4
        38: aload_1
        39: aload_0
        40: getfield      #298                // Field elementData:[Ljava/lang/Object;
        43: iload         4
        45: aaload
        46: invokeinterface #349,  2          // InterfaceMethod java/util/function/UnaryOperator.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        51: aastore
        52: iinc          4, 1
        55: goto          18
        58: aload_0
        59: getfield      #294                // Field modCount:I
        62: iload_2
        63: if_icmpeq     74
        66: new           #181                // class java/util/ConcurrentModificationException
        69: dup
        70: invokespecial #342                // Method java/util/ConcurrentModificationException."<init>":()V
        73: athrow
        74: aload_0
        75: dup
        76: getfield      #294                // Field modCount:I
        79: iconst_1
        80: iadd
        81: putfield      #294                // Field modCount:I
        84: return
      StackMapTable: number_of_entries = 3
        frame_type = 254 /* append */
          offset_delta = 18
          locals = [ int, int, int ]
        frame_type = 250 /* chop */
          offset_delta = 39
        frame_type = 15 /* same */
      LineNumberTable:
        line 1446: 0
        line 1447: 5
        line 1448: 10
        line 1449: 15
        line 1450: 32
        line 1449: 52
        line 1452: 58
        line 1453: 66
        line 1455: 74
        line 1456: 84
    Signature: #230                         // (Ljava/util/function/UnaryOperator<TE;>;)V

  public void sort(java.util.Comparator<? super E>);
    descriptor: (Ljava/util/Comparator;)V
    flags: ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: getfield      #294                // Field modCount:I
         4: istore_2
         5: aload_0
         6: getfield      #298                // Field elementData:[Ljava/lang/Object;
         9: checkcast     #11                 // class "[Ljava/lang/Object;"
        12: iconst_0
        13: aload_0
        14: getfield      #295                // Field size:I
        17: aload_1
        18: invokestatic  #337                // Method java/util/Arrays.sort:([Ljava/lang/Object;IILjava/util/Comparator;)V
        21: aload_0
        22: getfield      #294                // Field modCount:I
        25: iload_2
        26: if_icmpeq     37
        29: new           #181                // class java/util/ConcurrentModificationException
        32: dup
        33: invokespecial #342                // Method java/util/ConcurrentModificationException."<init>":()V
        36: athrow
        37: aload_0
        38: dup
        39: getfield      #294                // Field modCount:I
        42: iconst_1
        43: iadd
        44: putfield      #294                // Field modCount:I
        47: return
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 37
          locals = [ int ]
      LineNumberTable:
        line 1461: 0
        line 1462: 5
        line 1463: 21
        line 1464: 29
        line 1466: 37
        line 1467: 47
    Signature: #214                         // (Ljava/util/Comparator<-TE;>;)V

  static int access$000(java.util.ArrayList);
    descriptor: (Ljava/util/ArrayList;)I
    flags: ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #295                // Field size:I
         4: ireturn
      LineNumberTable:
        line 107: 0

  static {};
    descriptor: ()V
    flags: ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: iconst_0
         1: anewarray     #167                // class java/lang/Object
         4: putstatic     #297                // Field EMPTY_ELEMENTDATA:[Ljava/lang/Object;
         7: iconst_0
         8: anewarray     #167                // class java/lang/Object
        11: putstatic     #296                // Field DEFAULTCAPACITY_EMPTY_ELEMENTDATA:[Ljava/lang/Object;
        14: return
      LineNumberTable:
        line 120: 0
        line 127: 7
}
SourceFile: "ArrayList.java"
Signature: #191                         // <E:Ljava/lang/Object;>Ljava/util/AbstractList<TE;>;Ljava/util/List<TE;>;Ljava/util/RandomAccess;Ljava/lang/Cloneable;Ljava/io/Serializable;
InnerClasses:
     static final #352= #174 of #173; //ArrayListSpliterator=class java/util/ArrayList$ArrayListSpliterator of class java/util/ArrayList